name: CD Pipeline

on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    strategy:
      matrix:
        service: [backend, frontend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.service }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push ${{ matrix.service }}
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ${{ matrix.service }}/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Image digest
      run: echo ${{ steps.meta.outputs.digest }}

  deploy:
    name: Deploy to Environment
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Deploy notification
      run: |
        echo "ðŸš€ Ready to deploy!"
        echo "Images have been pushed to GitHub Container Registry"
        echo "Next steps: Configure your deployment target (K8s, Docker Swarm, Cloud Provider, etc.)"
        
    # Uncomment and configure based on your deployment target:
    
    # For AWS ECS deployment:
    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v4
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-1
    #
    # - name: Deploy to ECS
    #   run: |
    #     # Your ECS deployment commands
    
    # For Kubernetes deployment:
    # - name: Set up kubectl
    #   uses: azure/setup-kubectl@v3
    #
    # - name: Deploy to Kubernetes
    #   run: |
    #     kubectl set image deployment/blip-backend backend=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend:latest
    #     kubectl set image deployment/blip-frontend frontend=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:latest

