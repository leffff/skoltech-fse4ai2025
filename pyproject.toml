[build-system]
requires = [
    "setuptools>=45.0",
    "wheel",
    "setuptools_scm>=6.2"
]
build-backend = "setuptools.build_meta"

[project]
name = "blip-image-captioning"
version = "1.0.0"
description = "A web application for image captioning using BLIP model from Hugging Face"
authors = [
    {name = "Your Team Name", email = "team@example.com"},
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
keywords = ["blip", "image-captioning", "fastapi", "streamlit", "ai", "computer-vision"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "transformers>=4.35.2",
    "torch>=2.1.0",
    "torchvision>=0.16.0",
    "pillow>=10.1.0",
    "numpy>=1.24.3",
    "python-multipart>=0.0.6",
    "accelerate>=0.24.1",
    "streamlit>=1.28.2",
    "httpx>=0.25.2",
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.1",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

docker = [
    "docker>=6.0.0",
]

[project.urls]
Homepage = "https://github.com/your-username/blip-image-captioning"
Repository = "https://github.com/your-username/blip-image-captioning"
Documentation = "https://github.com/your-username/blip-image-captioning#readme"
"Issue Tracker" = "https://github.com/your-username/blip-image-captioning/issues"

[project.scripts]
blip-backend = "backend.app.main:main"
blip-frontend = "frontend.app:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["backend*", "frontend*", "tests*"]

[tool.setuptools.package-data]
"*" = ["*.txt", "*.md", "*.toml"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--cov=backend/app",
    "--cov-report=html",
    "--cov-report=term-missing",
]

[tool.coverage.run]
source = ["backend/app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  | \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | frontend
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", "build", "dist", "frontend"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true